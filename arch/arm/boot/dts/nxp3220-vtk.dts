// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (C) 2018  Nexell Co., Ltd.
 * Author: JungHyun, Kim <jhkim@nexell.co.kr>
 */

/dts-v1/;
#include <dt-bindings/gpio/gpio.h>
#include "nxp3220.dtsi"

/ {
	model = "Nexell nxp3220 validation test board";
	compatible = "nexell,nxp3220-vtk", "nexell,nxp3220";

	chosen {
		stdout-path = &uart2;
	};

	memory@40000000 {
		device_type = "memory";
		reg = <0x40000000 0x20000000>;
	};

	sound0: sound0 {
		compatible = "simple-audio-card";
		simple-audio-card,name = "nxp3220 Audio Card ALC5623";
		status = "okay";

		simple-audio-card,dai-link@0 {
			mclk-fs = <256>;
			format = "i2s";
			frame-master = <&sndcpu0>;
			bitclock-master = <&sndcpu0>;

			sndcpu0: cpu  {
				sound-dai = <&i2s0 0>;
			};

			sndcodec0: codec {
				sound-dai = <&alc5623_0>;
			};
		};
	};

	sound1: sound1 {
		compatible = "simple-audio-card";
		simple-audio-card,name = "nxp3220 Audio Card ALC5623";
		status = "okay";

		simple-audio-card,dai-link@0 {
			mclk-fs = <256>;
			format = "i2s";
			frame-master = <&sndcpu1>;
			bitclock-master = <&sndcpu1>;

			sndcpu1: cpu  {
				sound-dai = <&i2s1 0>;
			};

			sndcodec1: codec {
				sound-dai = <&alc5623_1>;
			};
		};
	};

	sound2: sound2 {
		compatible = "simple-audio-card";
		simple-audio-card,name = "nxp3220 Audio Card ALC5623";
		status = "okay";

		simple-audio-card,dai-link@0 {
			mclk-fs = <256>;
			format = "i2s";
			frame-master = <&sndcpu2>;
			bitclock-master = <&sndcpu2>;

			sndcpu2: cpu  {
				sound-dai = <&i2s2 0>;
			};

			sndcodec2: codec {
				sound-dai = <&alc5623_2>;
			};
		};
	};

	sound3: sound3 {
		compatible = "simple-audio-card";
		simple-audio-card,name = "nxp3220 Audio Card ALC5623";
		status = "okay";

		simple-audio-card,dai-link@0 {
			mclk-fs = <256>;
			format = "i2s";
			frame-master = <&sndcpu3>;
			bitclock-master = <&sndcpu3>;

			sndcpu3: cpu  {
				sound-dai = <&i2s3 0>;
			};

			sndcodec3: codec {
				sound-dai = <&alc5623_3>;
			};
		};
	};

	thermal-zones {
		cpu_thermal: cpu-thermal {
			thermal-sensors = <&tmuctrl_0>;
			polling-delay-passive = <1000>;
			polling-delay = <1000>;
			trips {
				cpu_alert0: cpu-alert-0 {
					temperature = <40000>;
					hysteresis = <10000>;
					type = "passive";
				};
				cpu_alert1: cpu-alert-1 {
					temperature = <50000>;
					hysteresis = <10000>;
					type = "passive";
				};
				cpu_alert2: cpu-alert-2 {
					temperature = <55000>;
					hysteresis = <10000>;
					type = "passive";
				};
				cpu-crit-0 {
					temperature = <65000>;
					hysteresis = <10000>;
					type = "critical";
				};
			};
		};
	};

};

&adc {
	status = "okay";
	assigned-clocks = <&cmu CLK_ADC0_APB>;
	assigned-clock-rates = <100000000>;
};

&dwmmc_0 {
	cap-mmc-highspeed;
	broken-cd;
	non-removable;
	nexell,drive_shift = <0x04>;
	nexell,sample_shift = <0x04>;
	card-detect-delay = <200>;
	disable-wp;
	status = "okay";
};

&dwmmc_1 {
	cap-sd-highspeed;
	broken-cd;
	nexell,drive_shift = <0x04>;
	nexell,sample_shift = <0x04>;
	card-detect-delay = <200>;
	disable-wp;
	status = "okay";
};

&dwmmc_2 {
	cap-mmc-highspeed;
	broken-cd;
	nexell,drive_shift = <0x04>;
	nexell,sample_shift = <0x04>;
	card-detect-delay = <200>;
	disable-wp;
	status = "okay";
};

&gmac0 {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&gmac0_pins>;
	phy-mode = "rgmii";
	phy-handle = <&ethphy0>;
	assigned-clocks = <&cmu CLK_GMAC_RGMII0_AXI>,
			  <&cmu CLK_GMAC_RGMII0_APB>,
			  <&cmu CLK_GMAC_RGMII0_PTP_REF>;
	assigned-clock-rates = <250000000>, <125000000>, <25000000>;

	phy-reset-gpios = <&alive_0 5 GPIO_ACTIVE_LOW>;
	phy-intr-gpios = <&alive_0 4 GPIO_ACTIVE_LOW>;
	phy-pme-gpios = <&alive_0 6 GPIO_ACTIVE_LOW>;

	mdio@3 {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@3 {
			reg = <3>;
		};
	};
};

&gmac1 {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&gmac1_pins>;
	phy-mode = "rmii";
	phy-handle = <&ethphy1>;
	assigned-clocks = <&cmu CLK_GMAC_RMII0_AXI>,
			  <&cmu CLK_GMAC_RMII0_APB>,
			  <&cmu CLK_GMAC_RMII0_PTP_REF>;
	assigned-clock-rates = <250000000>, <125000000>, <25000000>;

	phy-reset-gpios = <&alive_0 9 GPIO_ACTIVE_LOW>;
	phy-intr-gpios = <&alive_0 7 GPIO_ACTIVE_LOW>;

	mdio@1 {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy1: ethernet-phy@1 {
			reg = <1>;
		};
	};
};

&dwc2otg {
	status = "okay";
};

&ehci {
	status = "okay";
};

&ohci {
	status = "okay";
};

&i2c_0 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	alc5623_3: alc5623@1a {
		#sound-dai-cells = <0>;
		compatible = "realtek,alc5623";
		reg = <0x1a>;
	};
};

&i2c_2 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	alc5623_0: alc5623@1a {
		#sound-dai-cells = <0>;
		compatible = "realtek,alc5623";
		reg = <0x1a>;
	};
};

&i2c_3 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	alc5623_1: alc5623@1a {
		#sound-dai-cells = <0>;
		compatible = "realtek,alc5623";
		reg = <0x1a>;
	};
};

&i2c_4 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	alc5623_2: alc5623@1a {
		#sound-dai-cells = <0>;
		compatible = "realtek,alc5623";
		reg = <0x1a>;
	};
};

&i2s0 {
	frame-bit = <32>;
	sample-rate = <48000>;
	assigned-clocks = <&cmu CLK_I2S0_CORE>;
	assigned-clock-rates = <12288000>;
	status = "okay";
};

&i2s1 {
	frame-bit = <32>;
	sample-rate = <48000>;
	assigned-clocks = <&cmu CLK_I2S1_CORE>;
	assigned-clock-rates = <12288000>;
	status = "okay";
};

&i2s2 {
	frame-bit = <32>;
	sample-rate = <48000>;
	assigned-clocks = <&cmu CLK_I2S2_CORE>;
	assigned-clock-rates = <12288000>;
	status = "okay";
};

&i2s3 {
	frame-bit = <32>;
	sample-rate = <48000>;
	assigned-clocks = <&cmu CLK_I2S3_CORE>;
	assigned-clock-rates = <12288000>;
	status = "okay";
};

&m_can0 {
	assigned-clocks = <&cmu CLK_CAN0_CORE>;
	assigned-clock-rates = <10000000>;
	status = "okay";
};

&m_can1 {
	assigned-clocks = <&cmu CLK_CAN1_CORE>;
	assigned-clock-rates = <10000000>;
	status = "okay";
};

&pwm {
	status = "okay";
	assigned-clocks = <&cmu CLK_PWM0_APB>;
	assigned-clock-rates = <166000000>;
};

&tmuctrl_0 {
	status = "okay";
};

&uart2 {
	status = "okay";
};

&usb2phy {
	status = "okay";
};

&rtc {
	status = "okay";
};
